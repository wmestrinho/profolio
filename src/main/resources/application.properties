# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres

# Username and password
spring.datasource.username=postgres
spring.datasource.password=2abetterlife

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
spring.http.multipart.max-file-size=1000MB
spring.http.multipart.max-request-size=10000MB

spring.mail.host=smtp.gmail.com
spring.mail.username=order4porjects@gmail.com
spring.mail.password=secret99
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true



# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=create

# Naming strategy
# spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.mvc.view.prefix=/webapp/FileUpload
spring.mvc.view.suffix=.jsp
upload.location=/tmp/
logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR
logging.level.org.apache=ERROR
logging.level.com.ironyard=ERROR